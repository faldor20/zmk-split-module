/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        colemak {
            bindings = <&tog 1>;
            key-positions = <10 14 15 19>;
        };

        one-hand-toggle {
            bindings = <&tog 1>;
            key-positions = <17 15 19>;
        };

        fkeys {
            bindings = <&sl 3>;
            key-positions = <15 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <16 18>;
        };

        apost {
            bindings = <&kp APOS>;
            key-positions = <8 18>;
            require-prior-idle-ms = <125>;
            timeout-ms = <100>;
        };

        rt2 {
            bindings = <&kp MINUS>;
            key-positions = <7 17>;
            require-prior-idle-ms = <125>;
        };

        rb2 {
            bindings = <&kp PLUS>;
            key-positions = <17 27>;
            require-prior-idle-ms = <125>;
        };
    };

    behaviors {
        capsctr: capsctr {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPSCTR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <50>;
            require-prior-idle-ms = <125>;
            retro-tap;
        };

        left_hr_mods: left_hr_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HR_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <50>;
            hold-trigger-key-positions = <5 15 25 16 6 8 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35 32 31 30>;
        };

        right_hr_mods: right_hr_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HR_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <50>;
            hold-trigger-key-positions = <0 1 3 4 10 11 12 13 14 20 21 22 23 24 2 30 31 32 33 34 35>;
        };

        hold_or_tap_press: hold_or_tap_press {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_OR_TAP_PRESS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own

        base_layer {
            bindings = <
  &kp Q             &kp W  &kp E                  &kp R                     &kp T        &kp Y                 &kp U                      &kp I          &kp O    &kp P
  &kp A             &kp S  &kp D                  &kp F                     &kp G        &kp H                 &kp J                      &kp K          &kp L    &kp SEMI
  &capsctr LCTRL Z  &kp X  &kp C                  &kp V                     &kp B        &kp N                 &kp M                      &kp COMMA      &kp DOT  &kp SLASH
                           &capsctr LEFT_ALT TAB  &capsctr LEFT_WIN ESCAPE  &lt 2 TAB    &capsctr LCTRL ENTER  &capsctr LEFT_SHIFT SPACE  &kp BACKSPACE
            >;
        };

        layer_1 {
            bindings = <
  &kp Q                     &kp W                     &kp F                  &kp P                       &kp B     &kp J   &kp L                         &kp U                   &kp Y                       &hold_or_tap_press SEMI APOS
  &left_hr_mods LEFT_WIN A  &left_hr_mods LEFT_ALT R  &left_hr_mods LCTRL S  &left_hr_mods LEFT_SHIFT T  &kp G     &kp M   &right_hr_mods RIGHT_SHIFT N  &right_hr_mods RCTRL E  &right_hr_mods RIGHT_ALT I  &right_hr_mods RIGHT_WIN O
  &capsctr LCTRL Z          &capsctr LEFT_SHIFT X     &kp C                  &kp D                       &kp V     &kp K   &kp H                         &kp COMMA               &kp DOT                     &kp FSLH
                                                      &trans                 &trans                      &trans    &trans  &trans                        &trans
            >;
        };

        layer_2 {
            bindings = <
  &kp N1  &kp N2             &kp N3          &kp N4        &kp N5        &kp N6        &kp N7         &kp N8         &kp N9       &kp N0
  &trans  &kp LEFT_BRACKET   &kp LEFT_BRACE  &kp LS(LPAR)  &kp DELETE    &kp EQUAL     &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT
  &trans  &kp RIGHT_BRACKET  &kp RBKT        &kp LS(RPAR)  &kp MINUS     &kp ASTERISK  &kp BACKSLASH  &kp PAGE_DOWN  &kp PAGE_UP  &kp SINGLE_QUOTE
                             &trans          &trans        &trans        &trans        &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
  &kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                    &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
